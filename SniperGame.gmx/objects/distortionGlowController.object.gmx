<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

// surface that view[0] is drawn into.
_passSurface = -1;

// size/scale in pixels of blur.
_size = 4.5;//1.1
_intensity = 1.6//1.8;

drawQueue = ds_queue_create();

showMap = true;
targetShader = distortionGlow_sdr;

uScale = shader_get_uniform(targetShader, "uScale");
uIntensity = shader_get_uniform(targetShader, "uIntensity");
colorMap = shader_get_sampler_index(targetShader, "colorMap");


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean up

ds_queue_destroy( drawQueue );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw sprites

surface_set_target( effects_getShaderSurface() );
d3d_set_projection_ortho( view_xview[0], view_yview[0], view_wview[0], view_hview[0], view_angle[0] );
draw_clear_alpha( c_black, 1 );


while ( !ds_queue_empty( drawQueue ) ) {
    
    var tCurrentObj = ds_queue_dequeue( drawQueue );

    //if ( object_is_ancestor( tCurrentObj.object_index, distortionGlowPar )) {
        with ( tCurrentObj ) {
            event_user( 0 );
        }
    //}
    //else if ( object_is_ancestor( tCurrentObj.object_index, physicalObject )) {
    //    with ( tCurrentObj ) {
    //        draw_sprite_ext( sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle - 90, c_black, image_alpha );
    //    }
    //}
    
}

surface_reset_target();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

// bind shader.
draw_set_blend_mode( bm_add );
shader_set(targetShader);
    shader_set_uniform_f( uIntensity, _intensity );
    var tGlobalSurface = effects_getShaderSurface();
    texture_set_stage(colorMap, surface_get_texture( tGlobalSurface ));
  
    var texScreen = surface_get_texture(tGlobalSurface);
    //d3d_set_projection_ortho( view_xview[0], view_yview[0], view_wview[0], view_hview[0], view_angle[0] );
    
    // first pass - here we render horizontaly blured screen into first pass surface.
    //surface_set_target(application_surface);
        shader_set_uniform_f(uScale, texture_get_texel_width(texScreen) * _size, 0.0);
        draw_surface_stretched(tGlobalSurface, view_xview, view_yview, 
                    view_wview, 
                    view_hview);

        shader_set_uniform_f(uScale, 0.0, texture_get_texel_height(texScreen) * _size);
        draw_surface_stretched(tGlobalSurface, view_xview, view_yview, 
                    view_wview, 
                    view_hview);

    //surface_reset_target();

    
shader_reset();
draw_set_blend_mode( bm_normal );

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG
if ( global.debugMode &amp;&amp; showMap) {
    if ( surface_exists( effects_getShaderSurface() ) ) {
        draw_surface_stretched( effects_getShaderSurface(), view_xview + 0, view_yview + 600, 300, 250 );
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG toggle
showMap = !showMap;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
